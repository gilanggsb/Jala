// Mocks generated by Mockito 5.4.4 from annotations
// in jalatest/test/shrimp_prices/unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:jalatest/features/features.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseResponse_0<T> extends _i1.SmartFake
    implements _i2.BaseResponse<T> {
  _FakeBaseResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [InjectorService].
///
/// See the documentation for Mockito's code generation for more information.
class MockInjectorService extends _i1.Mock implements _i2.InjectorService {
  @override
  _i3.Future<void> setupLocator({bool? isTesting = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setupLocator,
          [],
          {#isTesting: isTesting},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void serviceInjection({bool? isTesting = false}) => super.noSuchMethod(
        Invocation.method(
          #serviceInjection,
          [],
          {#isTesting: isTesting},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void moduleInjection({bool? isTesting = false}) => super.noSuchMethod(
        Invocation.method(
          #moduleInjection,
          [],
          {#isTesting: isTesting},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ShrimpPricesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockShrimpPricesRepository extends _i1.Mock
    implements _i2.ShrimpPricesRepository {
  @override
  _i3.Future<_i2.BaseResponse<List<_i2.ShrimpPrice>>> getShrimpPrices(
          _i2.ShrimpPricesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #getShrimpPrices,
          [request],
        ),
        returnValue: _i3.Future<_i2.BaseResponse<List<_i2.ShrimpPrice>>>.value(
            _FakeBaseResponse_0<List<_i2.ShrimpPrice>>(
          this,
          Invocation.method(
            #getShrimpPrices,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i2.BaseResponse<List<_i2.ShrimpPrice>>>.value(
                _FakeBaseResponse_0<List<_i2.ShrimpPrice>>(
          this,
          Invocation.method(
            #getShrimpPrices,
            [request],
          ),
        )),
      ) as _i3.Future<_i2.BaseResponse<List<_i2.ShrimpPrice>>>);
}
